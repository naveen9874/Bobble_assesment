# -*- coding: utf-8 -*-
"""FaceMaskTask.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kCClZf5T8b8VIyLd0ZoBqqH5jlNOtIQ6
"""



"""<h2> Face Mask Task </h2> <br>
You are provided with some sample images along with this task 
[here](https://drive.google.com/drive/folders/1zy2Jqn_R2XakWTb-94S3XJMT_qTpxEz2?usp=sharing). These are images extracted from a Celebrity Dataset to be used for segmentation. The task here though, is to crop the original image (named like 'xx.jpg') using it's corresponding mask provided (named like '000xx_skin.png'). Feel free to download and upload the image data under a folder in this runtime and name the folder "faces". 

For a complete illustration see all cells below. 

For this task you should only use 'numpy' for the masking task. Please  use standard image processing libraries like opencv, seaborn, matplotlib etc. to print images. Please refrain from using any other online processing tools.
It would be enough to simply 'plt.imshow(result)' for all face images provided (part code below). You'll need to insert code only where mentioned in this case.

<h2> Imports and Dependencies </h2>
"""

import numpy as np
import cv2 
import matplotlib.pyplot as plt 
from PIL import image

"""<h2> Some reading and preprocessing code </h2>  """

img1 = cv2.imread('faces/43.jpg') 
img1_rgb = img1[...,::-1].copy()
img1_mask = cv2.imread('faces/00043_skin.png')
resized1 = cv2.resize(img1_rgb, (224,224), interpolation = cv2.INTER_AREA)

img2 = cv2.imread('faces/62.jpg') 
img2_rgb = img2[...,::-1].copy()
img2_mask = cv2.imread('faces/00062_skin.png')
resized2 = cv2.resize(img2_rgb, (224,224), interpolation = cv2.INTER_AREA)

"""<h2> Code Here </h2>"""

def crop_by_mask(image, mask):
    result_image = mask.paste(image, (0,0))
    return result_image

"""<h2> Results </h2> """

plt.imshow(crop_by_mask(resized1, img1_mask))

plt.imshow(crop_by_mask(resized2, img2_mask))